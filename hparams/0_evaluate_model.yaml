# Model: wav2vec2 + DNN + CTC
# Augmentation: SpecAugment
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 6006
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !ref /home/CVoice_hubert_ctc/result/hubert_ctc_de/<seed>
test_wer_file: !ref <output_folder>/wer_test.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt


# URL for the LARGE Fairseq German wav2vec2 model.
#wav2vec2_hub: facebook/wav2vec2-large-xlsr-53
#wav2vec2_folder: !ref <save_folder>/wav2vec2_checkpoint

# Path for the wav2vec2-large-xlsr-53 model.
wav2vec2_hub: facebook/hubert-base-ls960
wav2vec2_folder: !ref <save_folder>/hubert_checkpoint

# Dataset prep parameters
data_folder: /data/cv-corpus-15.0-2023-09-08/de
train_tsv_file: !ref <data_folder>/train.tsv
dev_tsv_file: !ref <data_folder>/dev.tsv
test_tsv_file: !ref <data_folder>/test.tsv
accented_letters: False # will strip accent
language: de ####################################
train_csv: !ref <save_folder>/train.csv
valid_csv: !ref <save_folder>/dev.csv
test_csv: !ref <save_folder>/test.csv

test_teens_csv: !ref <save_folder>/test_teens.csv
test_twenties_csv: !ref <save_folder>/test_twenties.csv
test_thirties_csv: !ref <save_folder>/test_thirties.csv
test_fourties_csv: !ref <save_folder>/test_fourties.csv
test_fifties_csv: !ref <save_folder>/test_fifties.csv
test_sixties_csv: !ref <save_folder>/test_sixties.csv
test_seventies_csv: !ref <save_folder>/test_seventies.csv
test_eighties_csv: !ref <save_folder>/test_eighties.csv
test_nineties_csv: !ref <save_folder>/test_nineties.csv

test_male_csv: !ref <save_folder>/test_male.csv
test_female_csv: !ref <save_folder>/test_female.csv
test_other_csv: !ref <save_folder>/test_other.csv


#test_teens_csv: !ref <save_folder>/dev_teens.csv
#test_twenties_csv: !ref <save_folder>/dev_twenties.csv
#test_thirties_csv: !ref <save_folder>/dev_thirties.csv
#test_fourties_csv: !ref <save_folder>/dev_fourties.csv
#test_fifties_csv: !ref <save_folder>/dev_fifties.csv
#test_sixties_csv: !ref <save_folder>/dev_sixties.csv
#test_seventies_csv: !ref <save_folder>/dev_seventies.csv
#test_eighties_csv: !ref <save_folder>/dev_eighties.csv
#test_nineties_csv: !ref <save_folder>/dev_nineties.csv

#test_male_csv: !ref <save_folder>/dev_male.csv
#test_female_csv: !ref <save_folder>/dev_female.csv
#test_other_csv: !ref <save_folder>/dev_other.csv

skip_prep: False


# We remove utterance slonger than 10s in the train/dev/test sets as
# longer sentences certainly correspond to "open microphones".
avoid_if_longer_than: 10.0

# Training parameters
number_of_epochs: 50
initial_lr: 0
peak_lr: 0.00003
decayed_lr: 0.0000015
sorting: descending
auto_mix_prec: False
sample_rate: 16000
ckpt_interval_minutes: 20 # save checkpoint every N min

# With data_parallel batch_size is split into N jobs
# With DDP batch_size is multiplied by N jobs
## Must be 6 per GPU to fit 16GB of VRAM
# Must be 8 per GPU to fit 32GB of VRAM
batch_size: 32
test_batch_size: 5
num_workers: 2 # 2 is better if the server is busy
dataloader_num_workers: !ref <num_workers>
test_num_workers: !ref <num_workers>
pin_memory: True


dataloader_options:
  batch_size: !ref <batch_size>
  num_workers: !ref <dataloader_num_workers>
  pin_memory: !ref <pin_memory>
  shuffle: True
test_dataloader_options:
  batch_size: !ref <test_batch_size>
  num_workers: !ref <test_num_workers>
  pin_memory: !ref <pin_memory>


# BPE parameters
token_type: char # ["unigram", "bpe", "char"] 
character_coverage: 1.0

# Model parameters
#dnn_neurons: 1024 # large model
dnn_neurons: 768 # base model
wav2vec_output_dim: !ref <dnn_neurons>
freeze_wav2vec: False # update transformer
freeze_feature_extractor: True # freeze feature extractor
dropout: 0.15

total_step: 414725  # 33178 * 50 epoch / 4 grad_accumulation
tenth_step: 41472   # scheduler warmup steps
half_step: 207362
eighth_step: 51840
warmup_steps: !ref <half_step> # do not update optimizer
freeze_steps: !ref <eighth_step> # only update linear layer
n_warmup_steps : 8294 # for Noam scheduler    33178 * 1 epoch / 4 grad_accumulation

anneal_rate: 0.99998555323

tenth_epoch: 5
half_epoch: 25
total_epoch: !ref <number_of_epochs>


# Outputs
output_neurons: 32 # BPE size


# Functions and classes
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
  limit: !ref <number_of_epochs>

augmentation: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
  sample_rate: !ref <sample_rate>
  speeds: [95, 100, 105]


wav2vec2: !new:speechbrain.lobes.models.huggingface_wav2vec.HuggingFaceWav2Vec2
  source: !ref <wav2vec2_hub>
  output_norm: True
  freeze: !ref <freeze_wav2vec>
  freeze_feature_extractor: !ref <freeze_feature_extractor>
  save_path: !ref <wav2vec2_folder>


# Decoding parameters
# Be sure that the bos and eos index match with the BPEs ones
blank_index: 0
bos_index: 1
eos_index: 2
pad_index: 3
unk_index: 4
bos_piece: "<bos>"
eos_piece: "<eos>"


min_decode_ratio: 0.0
max_decode_ratio: 1.0
beam_size: 80
eos_threshold: 1.5
using_max_attn_shift: True
max_attn_shift: 140



#####
# Uncomment this block if you prefer to use a Fairseq pretrained model instead
# of a HuggingFace one. Here, we provide an URL that is obtained from the
# Fairseq github for the multilingual XLSR.
#
#wav2vec2_url: https://dl.fbaipublicfiles.com/fairseq/wav2vec/wav2vec_vox_960h_pl.pt
#wav2vec2: !new:speechbrain.lobes.models.fairseq_wav2vec.FairseqWav2Vec2
#    pretrained_path: !ref <wav2vec2_url>
#    output_norm: True
#    freeze: False
#    save_path: !ref <save_folder>/wav2vec2_checkpoint/model.pt

ctc_lin: !new:speechbrain.nnet.linear.Linear
  input_size: !ref <dnn_neurons> # Size of the input tensor.
  n_neurons: !ref <output_neurons> # number of output neurons

log_softmax: !new:speechbrain.nnet.activations.Softmax
  apply_log: True

ctc_cost: !name:speechbrain.nnet.losses.ctc_loss
  blank_index: !ref <blank_index>

modules:
  wav2vec2: !ref <wav2vec2>
  ctc_lin: !ref <ctc_lin>

model: !new:torch.nn.ModuleList
  - [!ref <wav2vec2>, !ref <ctc_lin>]

model_opt_class: !name:torch.optim.Adam
  lr: !ref <initial_lr>
  betas: (0.9, 0.98)


#lr_annealing_model: !ref <lr_annealing_model_1>


lr_annealing_model_1: !new:mySchedulers.MyIntervalScheduler
  lr_initial: !ref <peak_lr>
  n_warmup_steps: !ref <tenth_step>
  anneal_steps: [!ref <half_step>]
  anneal_rates: [!ref <anneal_rate>]


lr_annealing_model_0: !new:speechbrain.nnet.schedulers.IntervalScheduler
  intervals: [{"steps": !ref <tenth_step>, "lr": !ref <peak_lr>},
              {"steps": !ref <half_step>, "lr": !ref <peak_lr>},
              {"steps": !ref <total_step>, "lr": !ref <decayed_lr>}]

lr_annealing_model_Noam: !new:speechbrain.nnet.schedulers.NoamScheduler
  lr_initial: !ref <decayed_lr>
  n_warmup_steps: !ref <n_warmup_steps>
  model_size: !ref <dnn_neurons>

lr_annealing_model_3: !new:speechbrain.nnet.schedulers.CyclicCosineScheduler
  lr_initial: !ref <peak_lr>
  n_warmup_steps: !ref <warmup_steps>
  total_steps: !ref <total_step>

lr_annealing_model_4: !new:speechbrain.nnet.schedulers.NewBobScheduler
  initial_value: !ref <peak_lr>
  improvement_threshold: 0.0025
  annealing_factor: 0.8
  patient: 0




checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
  checkpoints_dir: !ref <save_folder>
  recoverables:
    wav2vec2: !ref <wav2vec2>
    model: !ref <model>
    #scheduler_model: !ref <lr_annealing_model>
    counter: !ref <epoch_counter>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
  save_file: !ref <train_log>

error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats


cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
  split_tokens: True
# split_tokens : bool
#    Whether to split tokens (used for e.g. creating
#    characters out of word tokens).
#    See ``speechbrain.dataio.dataio.split_word``.